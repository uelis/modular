/* Kierstead terms */
let k1 = \f -> f (\x -> f (\y -> y)) 
let k2 = \f -> f (\x -> f (\y -> x))

/* distinguishing term */
let or = \x1 -> \x2 -> if 0 < x1 then 1 else x2
let not = \x -> 1 - x
let nor = \x1 -> \x2 -> not (or x1 x2)
let d = \g ->
          let x1 = g 0 in
          let x2 = g 1 in
          nor x1 x2

let main =
  let u1 = print (k1 d) in
  let u2 = print (k2 d) in
  u1
  
